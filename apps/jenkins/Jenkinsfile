pipeline {
    agent { node { label 'linux-docker-node-1' } }
    
    tools {
        jdk 'jdk17'
        maven 'maven3'
    }

    environment {
        SCANNER_HOME= tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                echo 'Getting Git Repo'
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[name: 'mission', url: 'https://github.com/jaiswaladi246/Mission.git']])
            }
        }
        
        stage('Compile') {
            steps {
                sh "mvn compile"
            }
        }
        
        stage('Test') {
            steps {
                sh "mvn test -DskipTests=true"
            }
        }

        stage('Trivy Scan') {
            steps {
                sh "trivy fs ${WORKSPACE} --format table -o trivy-fs-report.html"
            }
        }

        stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectKey=Mission -Dsonar.projectName=Mission \
                            -Dsonar.java.binaries=. '''
                }
            }
        }

        stage('Build') {
            steps {
                sh "mvn package"
            }
        }

    }
    
}
