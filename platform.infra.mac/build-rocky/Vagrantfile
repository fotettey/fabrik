# -*- mode: ruby -*-
# vi: set ft=ruby :


Vagrant.configure("2") do |config|
  config.vm.provision "shell", inline: "echo Hello from $(hostname)"
  config.vm.provision "shell" do |ssh|
    ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
    ssh.inline = <<-SHELL
      echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
      echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
      BERLIN_TZ=$(timedatectl list-timezones | grep Berlin)
      timedatectl set-timezone ${BERLIN_TZ}
      timedatectl
      mkdir -p /home/vagrant/projects
      chown -R vagrant:vagrant /home/vagrant/projects
      SHELL

      config.vm.provision "file", source: "~/.ssh/git-auto", destination: "/home/vagrant/.ssh/git-auto"  ## user: fotettey.at.gmail.com
      config.vm.provision "file", source: "~/Documents/GitHub/fabrik/platform.infra.mac/ansible/build-playbook.yaml", destination: "/home/vagrant/projects/build-playbook.yaml"  ## user: fotettey.at.gmail.com
      config.vm.provision "file", source: "~/Documents/VAGRANT-DEVBOX-DOCUMENTS/certs/ca-chain.crt", destination: "/home/vagrant/certs/ca-chain.crt"
      config.vm.provision "file", source: "~/Documents/VAGRANT-DEVBOX-DOCUMENTS/certs/wildcard.crt", destination: "/home/vagrant/certs/wildcard.crt"
      config.vm.provision "file", source: "~/Documents/VAGRANT-DEVBOX-DOCUMENTS/certs/wildcard.key", destination: "/home/vagrant/certs/wildcard.key"
        # config.vm.synced_folder "~/Documents/VAGRANT-DEVBOX-DOCUMENTS/certs", "/home/vagrant/certs", type: "smb" 
        # SMB folder_sync disabled due to unresponsive permissions change in SUDOERS config ff Vagrant off docs https://developer.hashicorp.com/vagrant/docs/synced-folders/smb#macos-host
    
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    DEBIAN_FRONTEND=noninteractive sh -c 'echo $DEBIAN_FRONTEND'
    # Ansible Installation
    ## https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-ansible-on-rocky-linux-9
    ## https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#intro-installation-guide
    ## https://docs.ansible.com/ansible/latest/reference_appendices/release_and_maintenance.html#ansible-changelogs
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    python3 get-pip.py --user
    python3 -m pip -V
    sudo dnf install epel-release -y
    sudo dnf install ansible -y
    ansible-galaxy role install geerlingguy.docker
    ansible-galaxy role install geerlingguy.git
    export ANSIBLE_HOST_KEY_CHECKING=False
    ansible-playbook /home/vagrant/projects/build-playbook.yaml --become 
    git --version
    docker --version
    sudo groupadd docker
    sudo usermod -aG docker $USER
    newgrp docker
    sudo chmod 666 /var/run/docker.sock
    sudo chown "$USER":"$USER" /home/"$USER"/.docker -R || echo "Docker post step non-fatal error"
    sudo chmod g+rwx "$HOME/.docker" -R  || echo "Docker post step non-fatal error"
    docker run --name hello-world hello-world || echo "Docker post step non-fatal error"
    docker rm hello-world  || echo "Docker post step non-fatal error"
    GIT_USERNAME=fotettey
    GIT_EMAIL=fotettey@gmail.com
    git config --global user.name ${GIT_USERNAME}
    git config --global user.email ${GIT_EMAIL}
    # Adding Git SSH Identity:
    chmod 400 .ssh/git-auto
    eval "$(ssh-agent -s)"
    ssh-add /home/vagrant/.ssh/git-auto
    # Git Clone Projects
    cd /home/vagrant/projects
    GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no" git clone git@github.com:fotettey/software.factory.git
    GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no" git clone https://github.com/fotettey/fabrik.git
     # sudo chmod u+rw,g+rw,o+rw /home/vagrant/projects/software.factory/certs/
     # cd /home/vagrant/projects/software.factory/certs/
     # tar -xvzf intCA.tgz
     # tar -xvzf wildcard.tgz
     # sudo chmod 644 -R /home/vagrant/projects/software.factory/certs/
     # sudo chown $(whoami):$(whoami) /home/vagrant/projects/software.factory/certs/
    echo "Installing `hostname` using Docker Compose"
    cd /home/vagrant/projects/fabrik
    git checkout apps-dev
     # sudo chmod +x /home/vagrant/projects/fabrik/apps/vault/install-docker/vault-configs/vault-init.sh || echo "CHMOD step for vault-init.sh non-fatal error"
     # docker compose -f /home/vagrant/projects/fabrik/apps/vault/install-docker/docker-compose.yml up -d
    SHELL
  end

  config.vm.define "postgres" do |psql|
    psql.vm.box = "bento/rockylinux-9"
    psql.vm.synced_folder ".", "/vagrant", disabled: true
    psql.vm.boot_timeout = 3000

    psql.vm.hostname = "postgres"
    psql.vm.provider "vmware_desktop" do |pgsql|
      pgsql.vmx["memsize"] = "2024"
      pgsql.vmx["numvcpus"] = "2"
      pgsql.gui = false
      pgsql.vmx["ethernet0.pcislotnumber"] = "160"
    end
  end

  config.vm.define "jenkins" do |jenkins|
    jenkins.vm.box = "bento/rockylinux-9"
    jenkins.vm.synced_folder ".", "/vagrant", disabled: true
    jenkins.vm.boot_timeout = 3000

    jenkins.vm.hostname = "jenkins"
    jenkins.vm.provider "vmware_desktop" do |jen|
      jen.vmx["memsize"] = "2024"
      jen.vmx["numvcpus"] = "2"
      jen.gui = false
      jen.vmx["ethernet0.pcislotnumber"] = "160"
    end
  end


  config.vm.define "sonarqube" do |sonar|
    sonar.vm.box = "bento/rockylinux-9"
    sonar.vm.synced_folder ".", "/vagrant", disabled: true
    sonar.vm.boot_timeout = 3000

    sonar.vm.provision "bootstrap", type: "shell", run: "always" do |s|
      s.inline = <<-SHELL
        sudo sysctl -w vm.max_map_count=262144
        sudo sysctl -w fs.file-max=131072
        sudo ulimit -n 131072
        sudo ulimit -u 8192
        reboot
      SHELL
    end

    sonar.vm.hostname = "sonarqube"
    sonar.vm.provider "vmware_desktop" do |son|
      son.vmx["memsize"] = "4096"
      son.vmx["numvcpus"] = "4"
      son.gui = false
      son.vmx["ethernet0.pcislotnumber"] = "160"
      son.vmx["scsi0:1.fileName"] = "/Volumes/fot-sandisk-4TB/IT/Disks/sonarqube/sonarqube-disk-flat.vmdk"
      son.vmx["scsi0:1.present"] = "TRUE"
      son.vmx["scsi0:1.deviceType"] = "scsi-hardDisk"
    end     
  end


  config.vm.define "nexus" do |nexus|
    nexus.vm.box = "bento/rockylinux-9"
    nexus.vm.synced_folder ".", "/vagrant", disabled: true
    nexus.vm.boot_timeout = 3000

    nexus.vm.hostname = "nexus"
    nexus.vm.provider "vmware_desktop" do |nex|
      nex.vmx["memsize"] = "4096"
      nex.vmx["numvcpus"] = "4"
      nex.gui = false
      nex.vmx["ethernet0.pcislotnumber"] = "160"
      nex.vmx["scsi0:1.fileName"] = "/Volumes/fot-sandisk-4TB/IT/Disks/nexus/nexus-disk-flat.vmdk"
      nex.vmx["scsi0:1.present"] = "TRUE"
      nex.vmx["scsi0:1.deviceType"] = "scsi-hardDisk"

    end
  end


end

